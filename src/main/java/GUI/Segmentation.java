/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import ij.ImagePlus;
import ij.gui.Roi;
import java.util.ArrayList;
import javax.swing.DefaultListModel;

/**
 *
 * @author Jan-Lukas Foerde
 */
public class Segmentation extends javax.swing.JFrame {

    /**
     * Creates new form Segmentation
     */
    public Segmentation() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        okButton = new javax.swing.JButton();
        maskPanel = new javax.swing.JPanel();
        removeMaskButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        maskjList = new javax.swing.JList<>();
        addMaskButton = new javax.swing.JButton();
        maskLabel = new javax.swing.JLabel();
        flipPanel = new javax.swing.JPanel();
        flipVButton = new javax.swing.JButton();
        flipHButton = new javax.swing.JButton();
        orientationLabel = new javax.swing.JLabel();
        thresholdPanel = new javax.swing.JPanel();
        thresholdSlider = new javax.swing.JSlider();
        stepSizeSpinner = new javax.swing.JSpinner();
        increaseStepSizeButton = new javax.swing.JButton();
        decreaseStepSizeButton = new javax.swing.JButton();
        valueLabel = new javax.swing.JLabel();
        thresholdDisplay = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        okButton.setText("Ok ");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        maskPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        removeMaskButton.setText("Remove mask");
        removeMaskButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeMaskButtonActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(maskjList);

        addMaskButton.setText("Add mask");
        addMaskButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMaskButtonActionPerformed(evt);
            }
        });

        maskLabel.setText("Mask");

        javax.swing.GroupLayout maskPanelLayout = new javax.swing.GroupLayout(maskPanel);
        maskPanel.setLayout(maskPanelLayout);
        maskPanelLayout.setHorizontalGroup(
            maskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(maskPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(maskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addMaskButton)
                    .addComponent(maskLabel)
                    .addComponent(removeMaskButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        maskPanelLayout.setVerticalGroup(
            maskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, maskPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(maskLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(maskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(maskPanelLayout.createSequentialGroup()
                        .addComponent(addMaskButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeMaskButton))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        flipPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        flipVButton.setText("Flip vertical");
        flipVButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flipVButtonActionPerformed(evt);
            }
        });

        flipHButton.setText("Flip horizontal");
        flipHButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flipHButtonActionPerformed(evt);
            }
        });

        orientationLabel.setText("Orientation");

        javax.swing.GroupLayout flipPanelLayout = new javax.swing.GroupLayout(flipPanel);
        flipPanel.setLayout(flipPanelLayout);
        flipPanelLayout.setHorizontalGroup(
            flipPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(flipPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(flipPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(flipPanelLayout.createSequentialGroup()
                        .addComponent(orientationLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(flipPanelLayout.createSequentialGroup()
                        .addComponent(flipHButton, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(flipVButton, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        flipPanelLayout.setVerticalGroup(
            flipPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, flipPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(orientationLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(flipPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(flipHButton)
                    .addComponent(flipVButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        thresholdPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        thresholdSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                thresholdSliderStateChanged(evt);
            }
        });

        stepSizeSpinner.setModel(new javax.swing.SpinnerListModel(new String[] {"1", "10", "100", "1000"}));

        increaseStepSizeButton.setText(">");
        increaseStepSizeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                increaseStepSizeButtonActionPerformed(evt);
            }
        });

        decreaseStepSizeButton.setText("<");
        decreaseStepSizeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decreaseStepSizeButtonActionPerformed(evt);
            }
        });

        valueLabel.setText("Value:");

        thresholdDisplay.setText("0");

        jLabel1.setText("Threshold");

        javax.swing.GroupLayout thresholdPanelLayout = new javax.swing.GroupLayout(thresholdPanel);
        thresholdPanel.setLayout(thresholdPanelLayout);
        thresholdPanelLayout.setHorizontalGroup(
            thresholdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, thresholdPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(stepSizeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(decreaseStepSizeButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(increaseStepSizeButton)
                .addGap(88, 88, 88))
            .addGroup(thresholdPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(thresholdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(thresholdPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(thresholdSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(thresholdPanelLayout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(valueLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(thresholdDisplay)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        thresholdPanelLayout.setVerticalGroup(
            thresholdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(thresholdPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(thresholdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(valueLabel)
                    .addComponent(thresholdDisplay))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(thresholdSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(thresholdPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(increaseStepSizeButton)
                    .addComponent(decreaseStepSizeButton)
                    .addComponent(stepSizeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(okButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(flipPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(thresholdPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(maskPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(thresholdPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(flipPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(maskPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(okButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void decreaseStepSizeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decreaseStepSizeButtonActionPerformed
        int stepIncrease = Integer.parseInt((String) stepSizeSpinner.getValue());
        thresholdSlider.setValue(thresholdSlider.getValue() - stepIncrease);
    }//GEN-LAST:event_decreaseStepSizeButtonActionPerformed

    private void flipHButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flipHButtonActionPerformed
        bfImp.getProcessor().flipHorizontal();
        fluoImp.getProcessor().flipHorizontal();
        stackImp.getProcessor().flipHorizontal();
    }//GEN-LAST:event_flipHButtonActionPerformed

    private void increaseStepSizeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_increaseStepSizeButtonActionPerformed
        int stepIncrease = Integer.parseInt((String) stepSizeSpinner.getValue());
        thresholdSlider.setValue(thresholdSlider.getValue() + stepIncrease);
    }//GEN-LAST:event_increaseStepSizeButtonActionPerformed

    private void flipVButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flipVButtonActionPerformed
        bfImp.getProcessor().flipVertical();
        fluoImp.getProcessor().flipVertical();
        stackImp.getProcessor().flipVertical();
    }//GEN-LAST:event_flipVButtonActionPerformed

    private void addMaskButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMaskButtonActionPerformed
        Roi selectedRoi = fluoImp.getRoi();
        if (selectedRoi == null) return;
        int roiType = selectedRoi.getType();
        if (!(roiType == Roi.POLYGON || roiType != Roi.RECTANGLE || roiType != Roi.OVAL)) return;
        roiList.add(selectedRoi);     
        
    }//GEN-LAST:event_addMaskButtonActionPerformed

    private void removeMaskButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeMaskButtonActionPerformed
        if (maskjList.getSelectedIndices().length == 0) return;
        int[] selections = maskjList.getSelectedIndices();
        for (int i = selections.length -1; i > 0; i--) {
            roiList.remove(i);
        }
        updateMaskList();
    }//GEN-LAST:event_removeMaskButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        lockButtons();
        //Process and hide image
        //View message
        //send notify
    }//GEN-LAST:event_okButtonActionPerformed

    private void thresholdSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_thresholdSliderStateChanged
        thresholdDisplay.setText(String.valueOf(thresholdSlider.getValue()));
        //View in image make copy and show
    }//GEN-LAST:event_thresholdSliderStateChanged

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Segmentation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Segmentation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Segmentation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Segmentation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Segmentation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addMaskButton;
    private javax.swing.JButton decreaseStepSizeButton;
    private javax.swing.JButton flipHButton;
    private javax.swing.JPanel flipPanel;
    private javax.swing.JButton flipVButton;
    private javax.swing.JButton increaseStepSizeButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel maskLabel;
    private javax.swing.JPanel maskPanel;
    private javax.swing.JList<String> maskjList;
    private javax.swing.JButton okButton;
    private javax.swing.JLabel orientationLabel;
    private javax.swing.JButton removeMaskButton;
    private javax.swing.JSpinner stepSizeSpinner;
    private javax.swing.JLabel thresholdDisplay;
    private javax.swing.JPanel thresholdPanel;
    private javax.swing.JSlider thresholdSlider;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
    
    ArrayList<Roi> roiList = new ArrayList();
    ImagePlus bfImp;
    ImagePlus fluoImp;
    ImagePlus stackImp;
    
    
    private void lockButtons() {
        thresholdSlider.setEnabled(false);
        stepSizeSpinner.setEnabled(false);
        increaseStepSizeButton.setEnabled(false);
        decreaseStepSizeButton.setEnabled(false);
        flipHButton.setEnabled(false);
        flipVButton.setEnabled(false);
        addMaskButton.setEnabled(false);
        removeMaskButton.setEnabled(false);
        maskjList.setEnabled(false);
    }
    
    private void unlockButtons() {
        thresholdSlider.setEnabled(true);
        stepSizeSpinner.setEnabled(true);
        increaseStepSizeButton.setEnabled(true);
        decreaseStepSizeButton.setEnabled(true);
        flipHButton.setEnabled(true);
        flipVButton.setEnabled(true);
        addMaskButton.setEnabled(true);
        removeMaskButton.setEnabled(true);
        maskjList.setEnabled(true);
    }
    
    private void setIamges(ImagePlus bfImp, ImagePlus fluoImp, ImagePlus stackImp) {
        this.bfImp = bfImp;
        this.fluoImp = fluoImp;
        this.stackImp = stackImp;        
        
        int maximum = (int) fluoImp.getStatistics().max;
        thresholdSlider.setMinimum(0);
        thresholdSlider.setMaximum(maximum);
        
        roiList.clear();
        updateMaskList();
        
        unlockButtons();
    }
    
    private void updateMaskList() {
        DefaultListModel listModel = new DefaultListModel();
        for (Roi roi : roiList) {
            listModel.addElement(roi);
        }
        maskjList.setModel(listModel);
    }
}
