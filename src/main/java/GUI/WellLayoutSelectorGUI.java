/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Containers.WellLayout;
import java.util.HashMap;
import javax.swing.DefaultListModel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.apache.commons.lang.StringUtils;

/**
 *
 * @author janlu
 */
public class WellLayoutSelectorGUI extends javax.swing.JDialog {
    WellLayout wellLayout;
    String[] rowLetters = {"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L"};

    /**
     * Creates new form wellLayoutSelectorGUI
     */
    public WellLayoutSelectorGUI(java.awt.Frame parent, boolean modal, WellLayout wellLayout) {
        super(parent, modal);
        initComponents();
        this.wellLayout = wellLayout;
        if (wellLayout != null) setLayout();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        rowCounter = new javax.swing.JSlider();
        jLabel2 = new javax.swing.JLabel();
        columnCounter = new javax.swing.JSlider();
        createPlateButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        groupNameField = new javax.swing.JTextField();
        addGroupButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        groupList = new javax.swing.JList<>();
        removeGroupButton = new javax.swing.JButton();
        addNumberCheckbox = new javax.swing.JCheckBox();
        addNumberSlider = new javax.swing.JSlider();
        savePlateButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        layoutTable = new javax.swing.JTable();

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Rows:");

        rowCounter.setMajorTickSpacing(1);
        rowCounter.setMaximum(12);
        rowCounter.setMinimum(1);
        rowCounter.setMinorTickSpacing(1);
        rowCounter.setPaintLabels(true);
        rowCounter.setPaintTicks(true);
        rowCounter.setSnapToTicks(true);

        jLabel2.setText("Columns:");

        columnCounter.setMajorTickSpacing(1);
        columnCounter.setMaximum(12);
        columnCounter.setMinimum(1);
        columnCounter.setMinorTickSpacing(1);
        columnCounter.setPaintLabels(true);
        columnCounter.setPaintTicks(true);
        columnCounter.setSnapToTicks(true);

        createPlateButton.setText("Create plate");
        createPlateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createPlateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(rowCounter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(columnCounter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(createPlateButton)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rowCounter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(columnCounter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(createPlateButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setText("Group name:");

        groupNameField.setText(" ");
        groupNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                groupNameFieldActionPerformed(evt);
            }
        });
        groupNameField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                groupNameFieldKeyReleased(evt);
            }
        });

        addGroupButton.setText("Add group");
        addGroupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addGroupButtonActionPerformed(evt);
            }
        });

        groupList.setModel(new DefaultListModel());
        groupList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(groupList);

        removeGroupButton.setText("Remove group");
        removeGroupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeGroupButtonActionPerformed(evt);
            }
        });

        addNumberCheckbox.setText("Add number");

        addNumberSlider.setMajorTickSpacing(1);
        addNumberSlider.setMaximum(10);
        addNumberSlider.setMinimum(1);
        addNumberSlider.setPaintLabels(true);
        addNumberSlider.setPaintTicks(true);
        addNumberSlider.setSnapToTicks(true);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(groupNameField))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(addGroupButton)
                            .addComponent(removeGroupButton)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(addNumberSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addNumberCheckbox)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(groupNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addGroupButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeGroupButton)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(addNumberSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addNumberCheckbox)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        savePlateButton.setText("Save plate");
        savePlateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savePlateButtonActionPerformed(evt);
            }
        });

        layoutTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        layoutTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        layoutTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        layoutTable.setTableHeader(null);
        layoutTable.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                layoutTableMouseDragged(evt);
            }
        });
        layoutTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                layoutTableMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                layoutTableMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(layoutTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1170, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(savePlateButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(savePlateButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void createPlateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createPlateButtonActionPerformed
        DefaultTableModel tableModel = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        layoutTable.setModel(tableModel);
        int columnCount = columnCounter.getValue() + 1;
        int rowCount = rowCounter.getValue() + 1;
        tableModel.setColumnCount(columnCount);
        tableModel.setRowCount(rowCount);
        layoutTable.setValueAt("-", 0,0);
        layoutTable.setTableHeader(null);
        for (int i = 1; i < columnCount; i++) {
            layoutTable.setValueAt(i, 0, i);
        }
        for (int i = 1; i < rowCount; i++) {
            layoutTable.setValueAt(rowLetters[i-1], i, 0);
        }
        
        System.out.println("Rows: " + layoutTable.getRowCount());
        System.out.println(rowCount);
        System.out.println("colums: " + layoutTable.getColumnCount());
        System.out.println(columnCount);
    }//GEN-LAST:event_createPlateButtonActionPerformed

    private void groupNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_groupNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_groupNameFieldActionPerformed

    private void addGroupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addGroupButtonActionPerformed
        DefaultListModel listModel = (DefaultListModel)groupList.getModel();
        if(StringUtils.isBlank(groupNameField.getText())) return;
        if (groupNameField.getText().trim().toUpperCase().equals("CON")) groupNameField.setText("CONTROL");
        listModel.addElement(groupNameField.getText().trim().toUpperCase());
        groupNameField.setText("");
    }//GEN-LAST:event_addGroupButtonActionPerformed

    private void removeGroupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeGroupButtonActionPerformed
        if (groupList.getSelectedIndex() == -1) return;
        DefaultListModel listModel = (DefaultListModel)groupList.getModel();
        listModel.remove(groupList.getSelectedIndex());
    }//GEN-LAST:event_removeGroupButtonActionPerformed

    private void layoutTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_layoutTableMouseClicked
//        int column = layoutTable.getSelectedColumn();
//        int row = layoutTable.getSelectedRow();
//        if ((column == 0) || (row == 0)) return;
//        if (addNumberCheckbox.isSelected()) {
//            if (layoutTable.getValueAt(row, column) == null) return;
//            if (((String)layoutTable.getValueAt(row, column)).endsWith(")")) return;
//            layoutTable.setValueAt(((String)layoutTable.getValueAt(row, column)) + "(" + addNumberSlider.getValue() + ")", row, column);
//            return;
//        }
//        if (groupList.isSelectionEmpty()) return;
//        if (layoutTable.getValueAt(row, column) != null) {
//            layoutTable.setValueAt(null, row, column);
//            return;
//        }
//        layoutTable.setValueAt(groupList.getSelectedValue(), row, column);
    }//GEN-LAST:event_layoutTableMouseClicked

    private void savePlateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savePlateButtonActionPerformed
        HashMap groupMap = new HashMap();
        int columns = layoutTable.getColumnCount();
        int rows = layoutTable.getRowCount();
        String[][] wellMap = new String[columns - 1][rows - 1];
        for (int i = 1; i < columns; i ++) {
            for (int j = 1; j < rows; j++) {
                String fieldID = rowLetters[j-1] + i;
                groupMap.put(fieldID, layoutTable.getValueAt(j, i));
                wellMap[i-1][j-1] = (String) layoutTable.getValueAt(j, i);
            }
        }
        String[] groups = new String[groupList.getModel().getSize()];
        for (int i = 0; i < groups.length; i++) {
            groups[i] = groupList.getModel().getElementAt(i);
        }
        wellLayout = new WellLayout(groupMap, groups, wellMap);
        
        dispose();
    }//GEN-LAST:event_savePlateButtonActionPerformed

    private void layoutTableMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_layoutTableMouseDragged
//        layoutTableMouseClicked(evt);
    }//GEN-LAST:event_layoutTableMouseDragged

    private void layoutTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_layoutTableMouseReleased
        int column = layoutTable.getSelectedColumn();
        int row = layoutTable.getSelectedRow();
        if ((column == 0) || (row == 0)) return;
        if (addNumberCheckbox.isSelected()) {
            if (layoutTable.getValueAt(row, column) == null) return;
            if (((String)layoutTable.getValueAt(row, column)).endsWith(")")) return;
            layoutTable.setValueAt(((String)layoutTable.getValueAt(row, column)) + "(" + addNumberSlider.getValue() + ")", row, column);
            return;
        }
        if (groupList.isSelectionEmpty()) return;
        if (layoutTable.getValueAt(row, column) != null) {
            layoutTable.setValueAt(null, row, column);
            return;
        }
        layoutTable.setValueAt(groupList.getSelectedValue(), row, column);
    }//GEN-LAST:event_layoutTableMouseReleased

    private void groupNameFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_groupNameFieldKeyReleased
        if(evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) addGroupButtonActionPerformed(null);
    }//GEN-LAST:event_groupNameFieldKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WellLayoutSelectorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WellLayoutSelectorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WellLayoutSelectorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WellLayoutSelectorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                WellLayoutSelectorGUI dialog = new WellLayoutSelectorGUI(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addGroupButton;
    private javax.swing.JCheckBox addNumberCheckbox;
    private javax.swing.JSlider addNumberSlider;
    private javax.swing.JSlider columnCounter;
    private javax.swing.JButton createPlateButton;
    private javax.swing.JList<String> groupList;
    private javax.swing.JTextField groupNameField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable layoutTable;
    private javax.swing.JButton removeGroupButton;
    private javax.swing.JSlider rowCounter;
    private javax.swing.JButton savePlateButton;
    // End of variables declaration//GEN-END:variables

    WellLayout getWellLayout() {
        return wellLayout;
    }

    private void setLayout() {
        String[] groups = wellLayout.getGroups();
        String[][] wellMap = wellLayout.getWellMap();
        
        DefaultTableModel tableModel = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        layoutTable.setModel(tableModel);
        int columnCount = wellMap.length + 1;
        int rowCount = wellMap[0].length + 1;
        
        tableModel.setColumnCount(columnCount);
        tableModel.setRowCount(rowCount);
        
        layoutTable.setValueAt("-", 0,0);
        layoutTable.setTableHeader(null);
        for (int i = 1; i < columnCount; i++) {
            layoutTable.setValueAt(i, 0, i);
        }
        for (int i = 1; i < rowCount; i++) {
            layoutTable.setValueAt(rowLetters[i-1], i, 0);
        }
        System.out.println(" Colums:" + wellMap.length); 
        for (String[] array : wellMap) {
            System.out.println(" rows: " + array.length);
        }
        for (int i = 0; i < wellMap.length; i++) {
            for (int j = 0; j < wellMap[0].length; j++) {
                System.out.println("Row: " + j + " Column: " + i);
                if(wellMap[i][j] == null) continue;
                layoutTable.setValueAt(wellMap[i][j], j+1, i+1);
            }
        }
        
        DefaultListModel listModel = new DefaultListModel();
        for (String group : groups) {
            listModel.addElement(group);
        }
        groupList.setModel(listModel);
    }
}
