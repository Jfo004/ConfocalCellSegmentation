/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import experiments.Experiment;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.time.Instant;
import java.util.HashMap;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import org.apache.commons.lang.StringUtils;
import tools.ExperimentImportCreated;

/**
 *
 * @author janlu
 */
public class NewExperimentGUI extends javax.swing.JDialog {
    private Experiment experiment;
    private File confocalDirectory;
    private HashMap groupMap; 
    
    
    /**
     * Creates new form newExperimentGUI
     */
    public NewExperimentGUI(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        experimentNameLable = new javax.swing.JLabel();
        confocalFolderButton = new javax.swing.JButton();
        confocalFolderField = new javax.swing.JLabel();
        createExperimentButton = new javax.swing.JButton();
        createWellLayoutButton = new javax.swing.JButton();
        createdWellLayoutField = new javax.swing.JLabel();
        experimentNameField = new javax.swing.JTextField();
        enableGroupingCheckBox = new javax.swing.JCheckBox();
        backButton = new javax.swing.JButton();
        dateField = new javax.swing.JFormattedTextField();
        timeField = new javax.swing.JFormattedTextField();
        injectionTimeLabel = new javax.swing.JLabel();
        fertilizationTimeLabel = new javax.swing.JLabel();
        fertilizationTimeDateField = new javax.swing.JFormattedTextField();
        fertilizationTimeTimeField = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        experimentNameLable.setText("Experiment name:");

        confocalFolderButton.setText("Select confocal folder");
        confocalFolderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confocalFolderButtonActionPerformed(evt);
            }
        });

        confocalFolderField.setText("None selected");

        createExperimentButton.setText("Create experiment");
        createExperimentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createExperimentButtonActionPerformed(evt);
            }
        });

        createWellLayoutButton.setText("Create well layout");
        createWellLayoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createWellLayoutButtonActionPerformed(evt);
            }
        });

        createdWellLayoutField.setText("None created");

        experimentNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                experimentNameFieldActionPerformed(evt);
            }
        });

        enableGroupingCheckBox.setText("Enable grouping");
        enableGroupingCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enableGroupingCheckBoxActionPerformed(evt);
            }
        });

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        dateField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("y/MM/dd"))));
        dateField.setText("2001/01/01");

        timeField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));
        timeField.setText("01:01");

        injectionTimeLabel.setText("Injection time:");

        fertilizationTimeLabel.setText("Fertilization Time:");

        fertilizationTimeDateField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("y/MM/dd"))));
        fertilizationTimeDateField.setText("2002/02/02");

        fertilizationTimeTimeField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));
        fertilizationTimeTimeField.setText("02:02");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(backButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(createExperimentButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(enableGroupingCheckBox)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(fertilizationTimeLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(fertilizationTimeDateField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(fertilizationTimeTimeField, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(createWellLayoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(createdWellLayoutField, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(experimentNameLable)
                                        .addComponent(injectionTimeLabel))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(timeField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(experimentNameField))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(confocalFolderButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(confocalFolderField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(0, 41, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(experimentNameLable)
                    .addComponent(experimentNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(injectionTimeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fertilizationTimeLabel)
                    .addComponent(fertilizationTimeDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fertilizationTimeTimeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confocalFolderButton)
                    .addComponent(confocalFolderField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(enableGroupingCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createWellLayoutButton)
                    .addComponent(createdWellLayoutField))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createExperimentButton)
                    .addComponent(backButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void createExperimentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createExperimentButtonActionPerformed
        Instant timeOfFertilization;
        Instant timeOfInjection;
        if (StringUtils.isBlank(experimentNameField.getText())) {
            experimentNameLable.setForeground(new Color(255, 0, 0));
            return;
        }
        else experimentNameLable.setForeground(new Color(0, 0, 0));
        
        try {
            String tempTime = dateField.getText().replace("/", "-").concat("T").concat(timeField.getText().concat(":00Z"));
            timeOfInjection = Instant.parse(tempTime);
            injectionTimeLabel.setForeground(new Color(0,0,0));
        }
        catch (java.time.format.DateTimeParseException e) {
            injectionTimeLabel.setForeground(new Color(255,0,0));
            return;
        }
        
        try {
            String tempTime = fertilizationTimeDateField.getText().replace("/", "-").concat("T").concat(fertilizationTimeTimeField.getText().concat(":00Z"));
            timeOfFertilization = Instant.parse(tempTime);
            fertilizationTimeLabel.setForeground(new Color(0,0,0));
        }
        catch (java.time.format.DateTimeParseException e) {
            fertilizationTimeLabel.setForeground(new Color(255,0,0));
            return;
        }
        if (confocalDirectory == null) {
            confocalFolderField.setForeground(new Color (255, 0, 0));
            return;
        }
        else {
            confocalFolderField.setForeground(new Color (0, 0, 0));
        }
        if (enableGroupingCheckBox.isSelected()) {
            if (groupMap == null) {
                createdWellLayoutField.setForeground(new Color (255,0,0));
                return;
            }
            experiment = new Experiment(experimentNameField.getText(), confocalDirectory, timeOfFertilization, timeOfInjection, groupMap);
        }
        else {
            System.out.println("Creating");
            experiment = new Experiment(experimentNameField.getText().trim(), confocalDirectory, timeOfFertilization, timeOfInjection, null);
        }
        System.out.println("Created");
        dispose();
    }//GEN-LAST:event_createExperimentButtonActionPerformed

    private void experimentNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_experimentNameFieldActionPerformed
        
        
    }//GEN-LAST:event_experimentNameFieldActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed

        this.dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    private void confocalFolderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confocalFolderButtonActionPerformed
        final JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            confocalDirectory = fileChooser.getSelectedFile();
            this.confocalFolderField.setText(confocalDirectory.getName());
        }        
    }//GEN-LAST:event_confocalFolderButtonActionPerformed

    private void enableGroupingCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enableGroupingCheckBoxActionPerformed
        if (this.enableGroupingCheckBox.isSelected()) this.createWellLayoutButton.setEnabled(true);
        else this.createWellLayoutButton.setEnabled(false);
    }//GEN-LAST:event_enableGroupingCheckBoxActionPerformed

    private void createWellLayoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createWellLayoutButtonActionPerformed
        WellLayoutSelectorGUI layoutSelector = new WellLayoutSelectorGUI( (JFrame) this.getParent(), true);
        layoutSelector.setLocationRelativeTo(this);
        layoutSelector.setVisible(true);
        groupMap = layoutSelector.getGroupMap();
        if (groupMap == null) createdWellLayoutField.setText("None created");
        else createdWellLayoutField.setText("Selected");
    }//GEN-LAST:event_createWellLayoutButtonActionPerformed

    public Experiment getExperiment() {
        return experiment;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewExperimentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewExperimentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewExperimentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewExperimentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NewExperimentGUI dialog = new NewExperimentGUI(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton confocalFolderButton;
    private javax.swing.JLabel confocalFolderField;
    private javax.swing.JButton createExperimentButton;
    private javax.swing.JButton createWellLayoutButton;
    private javax.swing.JLabel createdWellLayoutField;
    private javax.swing.JFormattedTextField dateField;
    private javax.swing.JCheckBox enableGroupingCheckBox;
    private javax.swing.JTextField experimentNameField;
    private javax.swing.JLabel experimentNameLable;
    private javax.swing.JFormattedTextField fertilizationTimeDateField;
    private javax.swing.JLabel fertilizationTimeLabel;
    private javax.swing.JFormattedTextField fertilizationTimeTimeField;
    private javax.swing.JLabel injectionTimeLabel;
    private javax.swing.JFormattedTextField timeField;
    // End of variables declaration//GEN-END:variables
}
